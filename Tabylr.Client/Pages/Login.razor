@page "/login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        // try
        // {
        //     var response = await SupabaseClient.Auth.SignIn(loginModel.Email, loginModel.Password);
        //     if (response is not null){
        //         if (response.User != null)
        //         {
        //             // Notify the authentication state provider of the successful login
        //             ((CustomAuthStateProvider)AuthenticationStateProvider).NotifyUserAuthentication(loginModel.Email);

        //             // Redirect to the home page or a protected page
        //             NavigationManager.NavigateTo("/");
        //         }
        //         else
        //         {
        //             errorMessage = "Login failed. Please check your email and password.";
        //         }

        //     }
        // }
        // catch (Exception ex)
        // {
        //     errorMessage = $"An error occurred: {ex.Message}";
        // }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }
}